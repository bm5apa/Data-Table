<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="/stylesheets/style.css" rel="stylesheet">
  <title>Data-Table</title>
</head>

<body>
  {{{ body }}}
</body>

<script>
  document.addEventListener('DOMContentLoaded', (event) => {
    synchronizeCheckboxes();
    document.querySelectorAll('input[type="checkbox"]').forEach(checkbox => {
      checkbox.addEventListener('change', event => {
        const checkboxState = {
          id: event.target.id,
          checked: event.target.checked
        };

        fetch('/checkbox', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(checkboxState)
        })
          .then(response => {
            if (!response.ok) {
              throw new Error('錯誤');
            }
            return response.json();
          })
          .then(data => {
            console.log(data);
            updateTableRow(event.target.id, event.target.checked);
          })
          .catch(error => console.error('錯誤：', error));
      });
    });
  });

  function synchronizeCheckboxes() {
    const headerCheckbox = document.getElementById('checkbox-all');
    const isChecked = headerCheckbox.checked;
    const checkboxes = document.querySelectorAll('input[type="checkbox"]');
    checkboxes.forEach(checkbox => {
      checkbox.checked = isChecked;
    });

    if (isChecked) {
      document.querySelectorAll('tbody tr').forEach(row => {
        row.classList.remove('table-gray', 'table-white');
        row.classList.add('table-orange');
      });
    } else {
      document.querySelectorAll('tbody tr').forEach(row => {
        const index = parseInt(row.querySelector('.table-id').textContent) - 1;
        const isOdd = index % 2 === 0;
        row.classList.remove('table-orange');
        if (isOdd) {
          row.classList.add('table-gray');
        } else {
          row.classList.add('table-white');
        }
      });
    }
  }

  function updateTableRow(id, isChecked) {
    const tr = document.getElementById(id).closest('tr');
    if (tr.closest('thead')) {
      synchronizeCheckboxes();
    } else if (tr.closest('tbody')) {
      if (isChecked) {
        tr.classList.add('table-orange');
        tr.classList.remove('table-gray', 'table-white');
      } else {
        const index = parseInt(tr.querySelector('.table-id').textContent) - 1;
        const isOdd = index % 2 === 0;
        tr.classList.remove('table-orange');
        if (isOdd) {
          tr.classList.add('table-gray');
        } else {
          tr.classList.add('table-white');
        }
      }
    }
  }
  
  document.querySelectorAll('nav img').forEach(img => {
    img.addEventListener('click', (event) => {
      handleNavClicked(event.target);
    });
  });

  function handleNavClicked(target) {
    const img = document.querySelectorAll('nav img')
     img.forEach(imgObj => {
      if (imgObj === target) {
        imgObj.classList.add('checked')
      } else if (imgObj !== target) {
        imgObj.classList.remove('checked')
      }
    });
  }

  document.addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll('.nav-action').forEach(navaction => {
      navaction.addEventListener('click', (event) => {
        event.stopPropagation();
        handleHamburgerClicked(navaction);
      });
    });

    function handleHamburgerClicked(target) {
      const navActions = document.querySelectorAll('.nav-action');
      navActions.forEach(navAction => {
        const popupContainer = navAction.querySelector('.popup-container');
        if (navAction === target) {
          popupContainer.classList.toggle('activated');
        } else {
          popupContainer.classList.remove('activated');
        }
      });
    }

    document.addEventListener('click', () => {
      document.querySelectorAll('.popup-container').forEach(popup => {
        popup.classList.remove('activated');
      });
    });
  });



</script>

</html>